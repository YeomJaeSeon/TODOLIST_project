[{"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\index.tsx":"1","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\reportWebVitals.ts":"2","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\App.tsx":"3","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\login\\Login.tsx":"4","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\main\\Main.tsx":"5","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\login\\Login.style.ts":"6","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\utils\\css-utils.ts":"7","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\services\\auth_service.ts":"8","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\services\\firebase.ts":"9","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\main\\Main.style.ts":"10","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\TodoForm\\Todo.tsx":"11","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\signup\\SignUp.tsx":"12","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\signup\\SignUp.style.ts":"13","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Card\\Card.tsx":"14","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Card\\Card.style.ts":"15","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\TodoForm\\Todo.style.ts":"16","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Calender\\Calender.tsx":"17","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Calender\\Calender.style.ts":"18","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\CurrentPlan\\CurrentPlan.tsx":"19","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\PlanTimer\\PlanTimer.tsx":"20","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\PlanTimer\\PlanTimer.style.ts":"21","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\modules\\index.ts":"22","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\modules\\todos.ts":"23","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\StartPlan\\StartPlan.tsx":"24","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\List\\List.tsx":"25","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\List\\List.style.ts":"26","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\StartPlan\\StartPlan.style.ts":"27","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\CurrentPlan\\CurrentPlan.style.ts":"28","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\ReadCard\\ReadCard.tsx":"29","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\ReadCard\\ReadCard.style.ts":"30","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\services\\data_service.ts":"31","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Ranking\\Ranking.tsx":"32","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Ranking\\Ranking.style.ts":"33","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Modal\\Modal.tsx":"34","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Modal\\Modal.style.ts":"35","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Modal\\CloseButton.tsx":"36","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Modal\\CloseButton.style.ts":"37","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\services\\music_service.ts":"38","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Header\\Header.tsx":"39","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Header\\Header.style.ts":"40"},{"size":950,"mtime":1615016803656,"results":"41","hashOfConfig":"42"},{"size":425,"mtime":1612327212632,"results":"43","hashOfConfig":"42"},{"size":1288,"mtime":1614996208944,"results":"44","hashOfConfig":"42"},{"size":4035,"mtime":1615036605138,"results":"45","hashOfConfig":"42"},{"size":7354,"mtime":1615036605142,"results":"46","hashOfConfig":"42"},{"size":2739,"mtime":1615036605138,"results":"47","hashOfConfig":"42"},{"size":351,"mtime":1614829122982,"results":"48","hashOfConfig":"42"},{"size":1086,"mtime":1615036605144,"results":"49","hashOfConfig":"42"},{"size":784,"mtime":1613538971249,"results":"50","hashOfConfig":"42"},{"size":2086,"mtime":1615036605140,"results":"51","hashOfConfig":"42"},{"size":1686,"mtime":1614166574533,"results":"52","hashOfConfig":"42"},{"size":7643,"mtime":1615033970208,"results":"53","hashOfConfig":"42"},{"size":2439,"mtime":1615034008308,"results":"54","hashOfConfig":"42"},{"size":3453,"mtime":1615020948885,"results":"55","hashOfConfig":"42"},{"size":1979,"mtime":1614860705346,"results":"56","hashOfConfig":"42"},{"size":534,"mtime":1612498497364,"results":"57","hashOfConfig":"42"},{"size":1543,"mtime":1614234712815,"results":"58","hashOfConfig":"42"},{"size":434,"mtime":1614840103846,"results":"59","hashOfConfig":"42"},{"size":1388,"mtime":1614166647244,"results":"60","hashOfConfig":"42"},{"size":3937,"mtime":1614909674873,"results":"61","hashOfConfig":"42"},{"size":2544,"mtime":1614909674358,"results":"62","hashOfConfig":"42"},{"size":224,"mtime":1613290070010,"results":"63","hashOfConfig":"42"},{"size":5816,"mtime":1615036605136,"results":"64","hashOfConfig":"42"},{"size":3918,"mtime":1614914764404,"results":"65","hashOfConfig":"42"},{"size":3087,"mtime":1615018831939,"results":"66","hashOfConfig":"42"},{"size":2400,"mtime":1614860734991,"results":"67","hashOfConfig":"42"},{"size":2127,"mtime":1614919203155,"results":"68","hashOfConfig":"42"},{"size":697,"mtime":1614860632748,"results":"69","hashOfConfig":"42"},{"size":2182,"mtime":1615020988375,"results":"70","hashOfConfig":"42"},{"size":2004,"mtime":1614858521424,"results":"71","hashOfConfig":"42"},{"size":6131,"mtime":1615036604988,"results":"72","hashOfConfig":"42"},{"size":1296,"mtime":1614842384926,"results":"73","hashOfConfig":"42"},{"size":2409,"mtime":1614843667161,"results":"74","hashOfConfig":"42"},{"size":3815,"mtime":1615036605134,"results":"75","hashOfConfig":"42"},{"size":2800,"mtime":1615017844005,"results":"76","hashOfConfig":"42"},{"size":329,"mtime":1615036605133,"results":"77","hashOfConfig":"42"},{"size":431,"mtime":1615036605131,"results":"78","hashOfConfig":"42"},{"size":361,"mtime":1615004957409,"results":"79","hashOfConfig":"42"},{"size":1429,"mtime":1615036605130,"results":"80","hashOfConfig":"42"},{"size":2172,"mtime":1614861076799,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12vozf8",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\index.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\reportWebVitals.ts",[],["171","172"],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\App.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\login\\Login.tsx",["173"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport * as S from './Login.style';\r\nimport { AuthServiceType } from '../../services/auth_service';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthType } from '../../services/firebase';\r\nimport { CookieSetOptions } from 'universal-cookie';\r\n\r\ntype PropType = {\r\n  authService: AuthServiceType;\r\n  cookies: {\r\n    [name: string]: any;\r\n  };\r\n  setCookie: (\r\n    name: string,\r\n    value: any,\r\n    options?: CookieSetOptions | undefined\r\n  ) => void;\r\n};\r\nconst Login: React.FC<PropType> = ({ authService, cookies, setCookie }) => {\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const pwdRef = useRef<HTMLInputElement>(null);\r\n  const history = useHistory();\r\n  const [isLogining, setIsLogining] = useState(false);\r\n\r\n  const loginHandler = () => {\r\n    const email = emailRef.current && emailRef.current.value;\r\n    const pwd = pwdRef.current && pwdRef.current.value;\r\n\r\n    // 로그인중 상태이면 아무것도안함.\r\n    if (isLogining) return;\r\n\r\n    if (email && pwd) {\r\n      // 로그인중..\r\n      setIsLogining(true);\r\n      authService\r\n        .login(email, pwd)\r\n        .then(() => {\r\n          // 로그인성공 -> 만료기간 1일 쿠키설정\r\n          setCookie('login', true, { maxAge: 60 * 60 * 24 });\r\n          alert('로그인 성공');\r\n        })\r\n        .catch((err) => {\r\n          if (err.code === 'auth/user-not-found') {\r\n            alert('존재하지 않는 아이디입니다.');\r\n          } else if (err.code === 'auth/invalid-email') {\r\n            alert('잘못된 이메일 형식입니다.');\r\n          } else if (err.code === 'auth/wrong-password') {\r\n            alert('잘못된 비밀번호입니다.');\r\n          } else if (err.code === 'auth/too-many-requests') {\r\n            alert('너무많이 틀렸습니다. 잠시후 시도해주세요');\r\n          } else {\r\n            alert(err.message);\r\n          }\r\n        })\r\n        .finally(() => {\r\n          // 로그인끝나면 false로.\r\n          setIsLogining(false);\r\n        });\r\n    } else {\r\n      alert('이메일이나 비밀번호를 입력해주세요');\r\n    }\r\n  };\r\n\r\n  const goToSignUp = () => {\r\n    history.push('/signup');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 쿠키없으면 로그아웃\r\n    !cookies.login && authService.logout();\r\n\r\n    const goToMain = (uid: string) => {\r\n      history.push({\r\n        pathname: '/main',\r\n        state: { id: uid },\r\n      });\r\n    };\r\n    const unscribe = authService.onAuthStatus((user: AuthType) => {\r\n      user && goToMain(user.uid);\r\n    });\r\n    return () => {\r\n      unscribe();\r\n    };\r\n  }, [authService, history]);\r\n\r\n  return (\r\n    <S.LoginContainer>\r\n      <S.ContentContainer>\r\n        <S.Logo src=\"/logo.png\" alt=\"logo\" />\r\n        <S.Title>TodoList</S.Title>\r\n        <S.Description>What is your first small step?</S.Description>\r\n        <S.FormContainer\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            loginHandler();\r\n          }}\r\n        >\r\n          <S.FormTitle>Login to your account</S.FormTitle>\r\n          <S.InputText ref={emailRef} type=\"text\" placeholder=\"Email address\" />\r\n          <S.InputText ref={pwdRef} type=\"password\" placeholder=\"Password\" />\r\n          <S.Button>Sign in</S.Button>\r\n          <S.SignUpContainer>\r\n            <S.SignUpText>처음 방문하셨나요?</S.SignUpText>\r\n            <S.SignUpButton type=\"button\" onClick={goToSignUp}>\r\n              Sign Up\r\n            </S.SignUpButton>\r\n          </S.SignUpContainer>\r\n        </S.FormContainer>\r\n      </S.ContentContainer>\r\n    </S.LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\main\\Main.tsx",["174"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport { AuthServiceType } from '../../services/auth_service';\r\nimport { DatabaseType } from '../../services/data_service';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  MainContainer,\r\n  PendingBackground,\r\n  LoadingSpinner,\r\n} from './Main.style';\r\nimport List from 'src/components/List/List';\r\nimport StartPlan, { RefType } from 'src/components/StartPlan/StartPlan';\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootType } from '../../modules/index';\r\nimport {\r\n  initCardAction,\r\n  changeSameCardAction,\r\n  changeDiffCardAction,\r\n} from 'src/modules/todos';\r\nimport Modal from 'src/components/Modal/Modal';\r\nimport Header from 'src/components/Header/Header';\r\nimport { CookieSetOptions } from 'universal-cookie';\r\n\r\ntype LocationState = {\r\n  id: string | null;\r\n};\r\n\r\ntype PropType = {\r\n  authService: AuthServiceType;\r\n  databaseService: DatabaseType;\r\n  cookies: {\r\n    [name: string]: any;\r\n  };\r\n  setCookie: (\r\n    name: string,\r\n    value: any,\r\n    options?: CookieSetOptions | undefined\r\n  ) => void;\r\n  removeCookie: (name: string, options?: CookieSetOptions | undefined) => void;\r\n};\r\n\r\nconst Main = ({\r\n  authService,\r\n  databaseService,\r\n  cookies,\r\n  setCookie,\r\n  removeCookie,\r\n}: PropType) => {\r\n  const [pending, setPending] = useState(true);\r\n  const [currentUser, setCurrentUser] = useState('');\r\n  const [modalDisplay, setModalDisplay] = useState(false);\r\n  const cards = useSelector((state: RootType) => state.todoReducer);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation<LocationState>();\r\n  const uid = location.state ? location.state.id : null;\r\n  const moveRef = useRef<RefType>(null);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    !cookies.login && authService.logout();\r\n    const unscribe = authService.getLoginStatus((user) => {\r\n      if (!user) {\r\n        history.push('/');\r\n      }\r\n    });\r\n\r\n    databaseService.dataSync(uid, (value: any) => {\r\n      if (!value) dispatch(initCardAction([]));\r\n      else {\r\n        const initState = Object.keys(value).map((key: string) => ({\r\n          id: key,\r\n          current: value[key].current,\r\n          today: value[key].today,\r\n          todos: value[key].todos\r\n            ? Object.keys(value[key].todos).map((todoKey) => ({\r\n                id: value[key].todos[todoKey].id,\r\n                thing: value[key].todos[todoKey].thing,\r\n                checked: value[key].todos[todoKey].checked,\r\n              }))\r\n            : [],\r\n        }));\r\n        dispatch(initCardAction(initState));\r\n      }\r\n      setPending(false);\r\n    });\r\n\r\n    return () => {\r\n      unscribe();\r\n    };\r\n  }, [databaseService, authService, dispatch, uid, history]);\r\n\r\n  useEffect(() => {\r\n    const datasRef = databaseService.getLoginUserData(uid, (character) => {\r\n      setCurrentUser(character);\r\n    });\r\n\r\n    return () => datasRef();\r\n  }, [databaseService, uid]);\r\n\r\n  const notAuthorize = () => {\r\n    setPending(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    removeCookie('login');\r\n    authService.logout();\r\n  };\r\n\r\n  const cardChangeHandler = (result: DropResult) => {\r\n    const { source, destination } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    // drop되는 위치 바뀌지않을때\r\n    if (source.droppableId === destination.droppableId) {\r\n      const newCards = [...cards];\r\n      const [reorderedItem] = newCards.splice(source.index, 1);\r\n      newCards.splice(destination.index, 0, reorderedItem);\r\n\r\n      dispatch(changeSameCardAction(newCards));\r\n    }\r\n    // drop되는 위치가 다를때 좌 -> 우, 우 -> 좌\r\n    else {\r\n      const selectedCard = cards.find((card) => card.id === result.draggableId);\r\n      const prevCard = cards.find((card) => card.current);\r\n\r\n      if (selectedCard) {\r\n        if (\r\n          selectedCard?.todos.length === 0 &&\r\n          destination.droppableId === 'card'\r\n        )\r\n          alert('할일을 먼저 입력해주세요!');\r\n        else {\r\n          // 우로 옮길때\r\n          if (result.destination?.droppableId === 'card') {\r\n            const newCards = cards.map((card) => {\r\n              if (card.id === result.draggableId) {\r\n                return { ...card, current: true };\r\n              } else {\r\n                if (card.current === true) {\r\n                  return { ...card, current: false };\r\n                }\r\n                return card;\r\n              }\r\n            });\r\n            dispatch(changeDiffCardAction(newCards));\r\n            databaseService.changeToStart(\r\n              uid,\r\n              result.draggableId,\r\n              true,\r\n              prevCard && prevCard.id\r\n            );\r\n          }\r\n          // 좌로 옮길때\r\n          else {\r\n            const originIndex = cards.findIndex(\r\n              (card) => card.id === result.draggableId\r\n            );\r\n            const newCards = cards.map((card) => {\r\n              if (card.id === result.draggableId) {\r\n                return { ...card, current: false };\r\n              }\r\n              return card;\r\n            });\r\n\r\n            const [reorderedItem] = newCards.splice(originIndex, 1);\r\n            if (destination.index > originIndex)\r\n              newCards.splice(destination.index - 1, 0, reorderedItem);\r\n            else newCards.splice(destination.index, 0, reorderedItem);\r\n\r\n            dispatch(changeDiffCardAction(newCards));\r\n            databaseService.changeToStart(\r\n              uid,\r\n              result.draggableId,\r\n              false,\r\n              prevCard && prevCard.id\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const openModal = () => {\r\n    setModalDisplay(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalDisplay(false);\r\n  };\r\n\r\n  const goToSection = (id: string) => {\r\n    if (id === 'timer') {\r\n      moveRef.current?.timer();\r\n    } else {\r\n      console.log('clicked');\r\n      moveRef.current?.ranking();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header\r\n        logout={logoutHandler}\r\n        currentUser={currentUser}\r\n        openModal={openModal}\r\n        goToSection={goToSection}\r\n        pending={pending}\r\n      />\r\n      {pending ? (\r\n        <PendingBackground>\r\n          <LoadingSpinner></LoadingSpinner>\r\n        </PendingBackground>\r\n      ) : (\r\n        <MainContainer>\r\n          <DragDropContext onDragEnd={cardChangeHandler}>\r\n            <List cards={cards} uid={uid} databaseService={databaseService} />\r\n            <StartPlan\r\n              uid={uid}\r\n              databaseService={databaseService}\r\n              modalDisplay={modalDisplay}\r\n              ref={moveRef}\r\n            />\r\n          </DragDropContext>\r\n        </MainContainer>\r\n      )}\r\n      {modalDisplay && (\r\n        <Modal\r\n          visible={modalDisplay}\r\n          closable={true}\r\n          onClose={closeModal}\r\n          className=\"modal\"\r\n          uid={uid}\r\n          databaseService={databaseService}\r\n          authService={authService}\r\n          notAuthorize={notAuthorize}\r\n          removeCookie={removeCookie}\r\n        >\r\n          {currentUser}님의 사용자 관리\r\n        </Modal>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\login\\Login.style.ts",["175","176","177"],"import { mobileQuery } from './../../utils/css-utils';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport {\r\n  MainBackgroundColor,\r\n  BlackColor,\r\n  WhiteColor,\r\n  StrongMainColor,\r\n  NotiColor,\r\n  BoxShadow,\r\n} from '../../utils/css-utils';\r\nimport { ReactComponent as GithubSVG } from '../../assets/svg/github-brands.svg';\r\nimport { ReactComponent as MailSVG } from '../../assets/svg/envelope-solid.svg';\r\n\r\nexport const LoginContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  height: 500px;\r\n  background-color: ${MainBackgroundColor};\r\n  border-radius: 10px;\r\n  box-shadow: ${BoxShadow};\r\n`;\r\nexport const ContentContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  flex-basis: 80%;\r\n  ${mobileQuery} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  width: 100px;\r\n  margin: 0;\r\n  margin-top: 20px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 40px;\r\n  margin: 0;\r\n  margin-bottom: 3px;\r\n  color: ${StrongMainColor};\r\n`;\r\n\r\nconst flow = keyframes`\r\n  0% {\r\n    opacity: 0.1;\r\n  }\r\n  100%{\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 20px;\r\n  animation: ${flow} 3s linear infinite;\r\n  margin: 0;\r\n  margin-top: 5px;\r\n`;\r\nexport const FormContainer = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  flex: 1;\r\n  margin: 0;\r\n`;\r\nexport const FormTitle = styled.p`\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  margin: 0;\r\n  margin-top: 11px;\r\n  margin-bottom: 18px;\r\n`;\r\n\r\nexport const InputText = styled.input`\r\n  width: 250px;\r\n  margin-bottom: 10px;\r\n  font-size: 1.2rem;\r\n  padding: 8px 10px;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  border: 0.5px gray solid;\r\n  ${mobileQuery} {\r\n    max-width: 60%;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-size: 20px;\r\n  background-color: white;\r\n  width: 90px;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  margin: 0;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  outline: none;\r\n  border: 0.5px gray solid;\r\n  cursor: pointer;\r\n  transition: all 300ms ease;\r\n  &:hover {\r\n    background-color: ${StrongMainColor};\r\n    color: ${WhiteColor};\r\n  }\r\n  ${mobileQuery} {\r\n    max-width: 60%;\r\n  }\r\n`;\r\n\r\nexport const SignUpContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  ${mobileQuery} {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n\r\nexport const SignUpText = styled.span`\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const SignUpButton = styled.button`\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  color: ${NotiColor};\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n  background-color: ${BlackColor};\r\n  color: ${WhiteColor};\r\n  border-radius: 0 0 10px 10px;\r\n  font-size: 25px;\r\n`;\r\n\r\nexport const Contact = styled.span`\r\n  position: absolute;\r\n  right: 0;\r\n  ${mobileQuery} {\r\n    bottom: 0;\r\n    left: 40%;\r\n  }\r\n`;\r\n\r\nexport const GithubBtn = styled.a`\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const GithubIcon = styled(GithubSVG)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: white;\r\n  &:hover {\r\n    color: ${MainBackgroundColor};\r\n  }\r\n  transition: color 200ms ease-in;\r\n`;\r\n\r\nexport const MailBtn = styled.a`\r\n  margin: 0 20px;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const MailIcon = styled(MailSVG)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: white;\r\n  &:hover {\r\n    color: ${MainBackgroundColor};\r\n  }\r\n  transition: color 200ms ease-in;\r\n`;\r\n","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\utils\\css-utils.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\services\\auth_service.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\services\\firebase.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\main\\Main.style.ts",["178"],"import styled, { keyframes } from 'styled-components';\r\nimport {\r\n  MainBackgroundColor,\r\n  NotiColor,\r\n  mobileQuery,\r\n  StrongMainColor,\r\n} from '../../utils/css-utils';\r\n\r\nexport const Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url('/background.jpg') no-repeat center/cover;\r\n  opacity: 0.9;\r\n  ${mobileQuery} {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: none;\r\n  }\r\n`;\r\n\r\nexport const UserInfoSection = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  padding: 10px;\r\n  font-weight: bolder;\r\n  ${mobileQuery} {\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nexport const CurrentUserInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const UserChangeInfo = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: ${NotiColor};\r\n  cursor: pointer;\r\n  float: right;\r\n  font-weight: bolder;\r\n  font-size: 1rem;\r\n  margin: 5px 0;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const UserInfoContainer = styled.span`\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const UserCharacterName = styled.span`\r\n  color: ${NotiColor};\r\n`;\r\n\r\nexport const LogoutBtn = styled.button`\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  color: ${NotiColor};\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const PendingBackground = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #bdbdbd;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0%{\r\n    tranform : rotate(0deg);\r\n  }\r\n  100%{\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const LoadingSpinner = styled.div`\r\n  width: 300px;\r\n  height: 300px;\r\n  border-radius: 50%;\r\n  border: 15px solid white;\r\n  border-top: 15px solid ${StrongMainColor};\r\n  animation: ${spin} 2s infinite linear;\r\n`;\r\n","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\TodoForm\\Todo.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\signup\\SignUp.tsx",["179","180"],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\pages\\signup\\SignUp.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Card\\Card.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Card\\Card.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\TodoForm\\Todo.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Calender\\Calender.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Calender\\Calender.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\CurrentPlan\\CurrentPlan.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\PlanTimer\\PlanTimer.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\PlanTimer\\PlanTimer.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\modules\\index.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\modules\\todos.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\StartPlan\\StartPlan.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\List\\List.tsx",["181"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport Card from '../Card/Card';\r\nimport {\r\n  Container,\r\n  EditorContainer,\r\n  ArrowIcon,\r\n  EditorTitle,\r\n  CardListContainer,\r\n  CardAddBtn,\r\n} from './List.style';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addCardAction, StateType } from '../../modules/todos';\r\nimport { ReactComponent as LeftSVG } from '../../assets/svg/chevron-left-solid.svg';\r\nimport { ReactComponent as RightSVG } from '../../assets/svg/chevron-right-solid.svg';\r\n\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport { DatabaseType } from 'src/services/data_service';\r\n\r\nimport { debounce } from 'lodash';\r\n\r\ntype PropType = {\r\n  cards: StateType;\r\n  uid: string | null;\r\n  databaseService: DatabaseType;\r\n};\r\n\r\nconst List: React.FC<PropType> = ({ cards, uid, databaseService }) => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [fold, setFold] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const updateWidth = () => {\r\n    setWidth(window.innerWidth);\r\n    setFold(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', updateWidth);\r\n\r\n    return () => window.removeEventListener('resize', updateWidth);\r\n  }, []);\r\n\r\n  const addCard = debounce(() => {\r\n    const newId = Date.now();\r\n\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth() + 1;\r\n    const day = date.getDate();\r\n\r\n    const today = `${year}-${month}-${day}`;\r\n\r\n    dispatch(addCardAction(String(newId), today));\r\n    // databaseService.write(uid, String(newId), today);\r\n    databaseService.writeCard(uid, String(newId), today).then(console.log);\r\n  }, 50);\r\n\r\n  const onFoldHandler = () => {\r\n    setFold((fold) => !fold);\r\n  };\r\n\r\n  const svg = useCallback((fold: boolean) => {\r\n    return fold ? LeftSVG : RightSVG;\r\n  }, []);\r\n\r\n  return (\r\n    <Container fold={fold}>\r\n      <EditorContainer fold={fold}>\r\n        <EditorTitle fold={fold}>Plan your todos</EditorTitle>\r\n        <Droppable\r\n          droppableId=\"cards\"\r\n          direction={width <= 800 ? 'horizontal' : 'vertical'}\r\n        >\r\n          {(provided, snapshot) => (\r\n            <CardListContainer\r\n              className=\"cards\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              isDraggingOver={snapshot.isDraggingOver}\r\n            >\r\n              {cards.map((card, index) => (\r\n                <Card\r\n                  key={card.id}\r\n                  cardId={card.id}\r\n                  todos={card.todos}\r\n                  current={card.current}\r\n                  index={index}\r\n                  uid={uid}\r\n                  databaseService={databaseService}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n            </CardListContainer>\r\n          )}\r\n        </Droppable>\r\n        <CardAddBtn onClick={addCard}>+</CardAddBtn>\r\n      </EditorContainer>\r\n      {width > 800 && <ArrowIcon as={svg(fold)} onClick={onFoldHandler} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\List\\List.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\StartPlan\\StartPlan.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\CurrentPlan\\CurrentPlan.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\ReadCard\\ReadCard.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\ReadCard\\ReadCard.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\services\\data_service.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Ranking\\Ranking.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Ranking\\Ranking.style.ts",["182"],"import { MainBackgroundColor, mobileQuery } from 'src/utils/css-utils';\r\nimport styled from 'styled-components';\r\nimport { ReactComponent as CrownSVG } from '../../assets/svg/crown-solid.svg';\r\n\r\nexport const RankingContainer = styled.div`\r\n  background-color: #e0e0e0;\r\n  flex: 1;\r\n  color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  &::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n\r\n    border-radius: 6px;\r\n    background: rgba(255, 255, 255, 0.4);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    border-radius: 6px;\r\n  }\r\n  ${mobileQuery} {\r\n    text-align: center;\r\n    width: 100%;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const RankingTitle = styled.h1`\r\n  font-size: 50px;\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const UserList = styled.ul`\r\n  list-style: none;\r\n  padding-left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CrwonIcon = styled(CrownSVG)`\r\n  margin-right: 20px;\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nexport const NoRankerUser = styled.div`\r\n  display: inline-block;\r\n  margin-right: 20px;\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nexport const User = styled.li<{ rank: number }>`\r\n  font-size: 1.5rem;\r\n  width: 80%;\r\n  padding: 10px 0;\r\n  display: flex;\r\n  background: ${(props) => {\r\n    if (props.rank === 0) {\r\n      return 'rgb(224,27,27) linear-gradient(90deg, rgba(224,27,27,1) 0%, rgba(255,183,0,1) 100%)';\r\n    } else if (props.rank === 1) {\r\n      return 'rgb(36,27,224) linear-gradient(90deg, rgba(36,27,224,1) 0%, rgba(175,176,192,1) 100%)';\r\n    } else if (props.rank === 2) {\r\n      return 'rgb(175,192,177) linear-gradient(90deg, rgba(175,192,177,1) 15%, rgba(240,163,7,1) 100%)';\r\n    } else return 'gray';\r\n  }};\r\n  margin: 10px 0;\r\n  border-radius: 10px;\r\n\r\n  ${CrwonIcon} {\r\n    color: ${(props) => {\r\n      if (props.rank === 0) {\r\n        return 'gold';\r\n      } else if (props.rank === 1) {\r\n        return 'silver';\r\n      } else if (props.rank === 2) {\r\n        return '#4b2c20';\r\n      }\r\n    }};\r\n  }\r\n  ${mobileQuery} {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const RankNum = styled.span`\r\n  margin-left: 20px;\r\n  flex-basis: 15%;\r\n`;\r\n\r\nexport const RankName = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 50px;\r\n  flex-basis: 60%;\r\n`;\r\n\r\nexport const RankTIme = styled.span`\r\n  flex: 1;\r\n`;\r\n","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Modal\\Modal.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Modal\\Modal.style.ts",["183"],"import {\r\n  mobileQuery,\r\n  NotiColor,\r\n  StrongMainColor,\r\n  WhiteColor,\r\n} from 'src/utils/css-utils';\r\nimport styled from 'styled-components';\r\n\r\nexport const ModalWrapper = styled.div<{ visible: boolean }>`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  overflow: auto;\r\n  outline: 0;\r\n`;\r\n\r\nexport const ModalOverlay = styled.div<{ visible: boolean }>`\r\n  box-sizing: border-box;\r\n  display: ${(props) => (props.visible ? 'block' : 'none')};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`;\r\n\r\nexport const ModalInner = styled.div`\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  box-shadow: 0 0 6px 0 rgba(0, 0, 0, 0.5);\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  width: 450px;\r\n  max-width: 560px;\r\n  height: 250px;\r\n  max-height: 300px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  margin: 0 auto;\r\n  padding: 40px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  ${mobileQuery} {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nexport const ModalTitle = styled.h1`\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nexport const ModalUserSection = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n`;\r\n\r\nexport const ModalSelectorSection = styled.div`\r\n  position: relative;\r\n  flex: 1;\r\n`;\r\nexport const ModalUserBtn = styled.button<{ btnType: string }>`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  -ms-transform: translate(-50%, -50%);\r\n  transform: translate(-50%, -50%);\r\n  margin: 0;\r\n  padding: 5px 10px;\r\n  background-color: transparent;\r\n  border: 2px\r\n    ${(props) => (props.btnType === 'change' ? StrongMainColor : 'red')} solid;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 1.3rem;\r\n  font-weight: bolder;\r\n  color: ${(props) => (props.btnType === 'change' ? StrongMainColor : 'red')};\r\n  outline: none;\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      props.btnType === 'change' ? StrongMainColor : 'red'};\r\n    color: ${WhiteColor};\r\n  }\r\n  transition: all 300ms ease;\r\n`;\r\nexport const ChangeSection = styled.div<{ isChange: boolean }>`\r\n  position: absolute;\r\n  bottom: 5%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 100%;\r\n  display: ${(props) => (props.isChange ? 'flex' : 'none')};\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ChangeCharacterInput = styled.input`\r\n  width: 80%;\r\n  padding: 5px;\r\n  border: 1px solid gray;\r\n  outline: none;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const CheckBtn = styled.button`\r\n  position: absolute;\r\n  right: -15px;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.2em;\r\n  outline: none;\r\n`;\r\n","C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Modal\\CloseButton.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Modal\\CloseButton.style.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\services\\music_service.ts",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\염재선\\Desktop\\studies\\todolist_react\\src\\components\\Header\\Header.style.ts",["184","185"],"import {\r\n  NotiColor,\r\n  StrongMainColor,\r\n  WhiteColor,\r\n  MainBackgroundColor,\r\n} from 'src/utils/css-utils';\r\nimport styled from 'styled-components';\r\nimport { ReactComponent as UserSVG } from '../../assets/svg/user-cog-solid.svg';\r\n\r\nexport const HeaderContainer = styled.header`\r\n  width: 100%;\r\n  height: 70px;\r\n  background-color: ${StrongMainColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 3;\r\n`;\r\nexport const HeaderSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 20px;\r\n`;\r\nexport const HeaderTitle = styled.h1`\r\n  font-size: 1.3rem;\r\n  margin-left: 10px;\r\n  color: ${MainBackgroundColor};\r\n`;\r\n\r\nexport const HeaderLogo = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  font-size: 1rem;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CurrentUser = styled.div`\r\n  margin-right: 20px;\r\n  color: ${MainBackgroundColor};\r\n`;\r\n\r\nexport const UserIcon = styled(UserSVG)`\r\n  width: 30px;\r\n  height: 30px;\r\n  color: ${MainBackgroundColor};\r\n`;\r\n\r\nexport const CharacterName = styled.span``;\r\n\r\nexport const Logout = styled.button`\r\n  margin-right: 20px;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  color: ${MainBackgroundColor};\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const UserSection = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #1976d2;\r\n  cursor: pointer;\r\n  font-size: 15px;\r\n  font-weight: bolder;\r\n  margin-right: 10px;\r\n  padding: 0;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const MoveBtn = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  background-color: transparent;\r\n  margin-right: 20px;\r\n  border: 2px solid ${MainBackgroundColor};\r\n  border-radius: 5px;\r\n  padding: 5px 10px;\r\n  color: ${MainBackgroundColor};\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${MainBackgroundColor};\r\n    color: ${StrongMainColor};\r\n  }\r\n  transition: all 300ms ease;\r\n`;\r\n",{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":100,"column":6,"nodeType":"192","endLine":100,"endColumn":28,"suggestions":"193"},{"ruleId":"190","severity":1,"message":"191","line":87,"column":6,"nodeType":"192","endLine":87,"endColumn":60,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":5,"column":3,"nodeType":"197","messageId":"198","endLine":5,"endColumn":13},{"ruleId":"195","severity":1,"message":"199","line":11,"column":28,"nodeType":"197","messageId":"198","endLine":11,"endColumn":37},{"ruleId":"195","severity":1,"message":"200","line":12,"column":28,"nodeType":"197","messageId":"198","endLine":12,"endColumn":35},{"ruleId":"195","severity":1,"message":"201","line":3,"column":3,"nodeType":"197","messageId":"198","endLine":3,"endColumn":22},{"ruleId":"202","severity":1,"message":"203","line":19,"column":28,"nodeType":"204","messageId":"205","endLine":19,"endColumn":29,"suggestions":"206"},{"ruleId":"202","severity":1,"message":"203","line":19,"column":53,"nodeType":"204","messageId":"205","endLine":19,"endColumn":54,"suggestions":"207"},{"ruleId":"195","severity":1,"message":"208","line":1,"column":51,"nodeType":"197","messageId":"198","endLine":1,"endColumn":57},{"ruleId":"195","severity":1,"message":"201","line":1,"column":10,"nodeType":"197","messageId":"198","endLine":1,"endColumn":29},{"ruleId":"195","severity":1,"message":"209","line":3,"column":3,"nodeType":"197","messageId":"198","endLine":3,"endColumn":12},{"ruleId":"195","severity":1,"message":"209","line":2,"column":3,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"195","severity":1,"message":"210","line":4,"column":3,"nodeType":"197","messageId":"198","endLine":4,"endColumn":13},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies.login'. Either include it or remove the dependency array.","ArrayExpression",["213"],["214"],"@typescript-eslint/no-unused-vars","'BlackColor' is defined but never used.","Identifier","unusedVar","'GithubSVG' is defined but never used.","'MailSVG' is defined but never used.","'MainBackgroundColor' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["215","216"],["217","218"],"'useRef' is defined but never used.","'NotiColor' is defined but never used.","'WhiteColor' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"messageId":"223","fix":"224","desc":"225"},{"messageId":"226","fix":"227","desc":"228"},{"messageId":"223","fix":"229","desc":"225"},{"messageId":"226","fix":"230","desc":"228"},"Update the dependencies array to be: [authService, cookies.login, history]",{"range":"231","text":"232"},"Update the dependencies array to be: [databaseService, authService, dispatch, uid, history, cookies.login]",{"range":"233","text":"234"},"removeEscape",{"range":"235","text":"236"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"237","text":"238"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"239","text":"236"},{"range":"240","text":"238"},[2706,2728],"[authService, cookies.login, history]",[2734,2788],"[databaseService, authService, dispatch, uid, history, cookies.login]",[466,467],"",[466,466],"\\",[491,492],[491,491]]